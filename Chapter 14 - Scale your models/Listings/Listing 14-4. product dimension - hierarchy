Dimension Product - hierarchy = 
var NoOfProductsToUse = [_No of Products To Use] --Maybe you will not receive the exact number as duplicate rows will be eliminated because of the usage of DISTINCT
var NoOfProductsAvailable = COUNTROWS('Dimension Template')
var ZeroPadding = CEILING(LOG10(NoOfProductsAvailable),1)
var p0_productbasetable = DISTINCT(
        SELECTCOLUMNS(
            ADDCOLUMNS(
                GENERATESERIES(1 , NoOfProductsToUse , 1)
                , "Product ID" , RANDBETWEEN(1 , NoOfProductsAvailable)
            )
            , "Product ID" , [Product ID]
            , "Product Name" , "P " & RIGHT(REPT("0" , ZeroPadding) &  [Product ID], LEN(NoOfProductsAvailable))
        )
    )

/* ***************************************************************** */
/* general information used for the binning to create hierarchies */
var NoOfRowsBaseTable = COUNTROWS(p0_productbasetable)
var MaxMinRange = MAXX(p0_productbasetable,[Product ID]) - MINX(p0_productbasetable,[Product ID])

/* ***************************************************************** */
/* using Sturges Formula to determine the bin width */
var noOfGroupsSturges = ROUND(LOG(NoOfRowsBaseTable,2),0)+1
var subgroupWidthSturges = CEILING((MaxMinRange/noOfGroupsSturges),1)
var groupWidthSturges = subgroupWidthSturges * 2

/* ***************************************************************** */
/* using Sturges Formula to determine the bin width */
var noOfGroupsRice = ROUND(2 * POWER(COUNTROWS(p0_productbasetable),1/3),0)
var subgroupWidthRice = CEILING((MaxMinRange/noOfGroupsRice),1)
var groupWidthRice = subgroupWidthRice * 2


var p1_productsWithHiearchy = 
    ADDCOLUMNS(
        p0_productbasetable
        ,
        /* the formula to create the number of groups has been taken from: https://en.wikipedia.org/wiki/Histogram */
        /* ***************************************************************** */
        /* using Sturges Formula to determine the bin width */
        "SG1 range"
            ,
            var groupNumber = CEILING([Product ID] / subgroupWidthSturges,1)
            return
            "SG1 range " & 1+(groupNumber-1) * subgroupWidthSturges & " to "  & FLOOR(groupNumber * subgroupWidthSturges,1)
        , "SG1 number"
            ,
            "SG1 number" & RIGHT(REPT("0", 3) & CEILING([Product ID] / subgroupWidthSturges,1),3)
        ,"G1 range"
            ,
            var groupNumber = CEILING([Product ID] / groupWidthSturges,1)
            return
            "G1 range " & 1+(groupNumber-1) * groupWidthSturges & " to "  & FLOOR(groupNumber * groupWidthSturges,1)
        , "G1 number"
            ,
            "G1 number " & RIGHT(REPT("0", 3) & CEILING([Product ID] / groupWidthSturges,1),3)

            /* ***************************************************************** */
            /* using Rice Formula to determine the bin width */
        ,"SG2 range"
            ,
            var groupNumber = CEILING([Product ID] / subgroupWidthRice,1)
            return
            "SG2 range " & 1+(groupNumber-1) * subgroupWidthRice & " to "  & FLOOR(groupNumber * subgroupWidthRice,1)
        , "SG2 number"
            ,
            "SG2 number" & RIGHT(REPT("0", 3) & CEILING([Product ID] / subgroupWidthRice,1),3)
        ,"G2 range"
            ,
            var groupNumber = CEILING([Product ID] / groupWidthRice,1)
            return
            "G2 range " & 1+(groupNumber-1) * groupWidthRice & " to "  & FLOOR(groupNumber * groupWidthRice,1)
        , "G2 number"
            ,
            "G2 number " & RIGHT(REPT("0", 3) & CEILING([Product ID] / groupWidthRice,1),3)
    )
return
p1_productsWithHiearchy